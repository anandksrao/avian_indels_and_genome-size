q()
cor.test(ave.48$simple.gs, ave.48$agsd.gs, alternative = "g")
setwd("/Users/yanzhuji/R-scripts/R-chp3_clean/") # folder on Mac load("stats.RData") # for the convenience of rerunning data; will delete in scripts for uploading.
load("stats.RData")
cor.test(ave.48$simple.gs, ave.48$agsd.gs, alternative = "g")
0.7209461^2
cor.test(log(ave.48$simple.gs), log(ave.48$agsd.gs), alternative = "g")
cor.test(ave.48$assembly.size, ave.48$agsd.gs, alternative = "g")
0.4764981^2
cor.test(ave.48$assembly.size, ave.48$simple.gs, alternative = "g")
0.4315338^2
cor.test(ave.48$simple.gs, ave.48$agsd.gs, alternative = "l")
cor.test(ave.48$simple.gs, ave.48$agsd.gs, alternative = "g")
cor.test(log(ave.48$assembly.size), log(ave.48$simple.gs), alternative = "g")
citation()
library(car)
setwd("/Users/yanzhuji/R-scripts/R-chp3/") # folder on Mac
load("stats.RData") # for the convenience of rerunning data; will delete in scripts for uploading.
leveneTest(ave.48$cmean.ratio, as.factor(ave.48$dummy))
sgs.l.p.all = vector(length=10000)
for ( i in c(1:10000) ) {
fl.sgs.sample = rnorm(length(na.omit(ave.48[fl.list,]$log.sgs)), mean=mean(ave.48[fl.list,]$log.sgs, na.rm=T), sd=sd(ave.48[fl.list,]$log.sgs, na.rm=T))
gd.sgs.sample = rnorm(length(na.omit(ave.48[gd.list,]$log.sgs)), mean=mean(ave.48[gd.list,]$log.sgs, na.rm=T), sd=sd(ave.48[gd.list,]$log.sgs, na.rm=T))
group = as.factor(c(rep(1, length(fl.sgs.sample)), rep(2, length(gd.sgs.sample))))
sgs.l.p.all[i] = leveneTest(c(fl.sgs.sample, gd.sgs.sample), group)$Pr[1]
}
mean(sgs.l.p.all)
cmr.l.p.all = vector(length=10000)
for ( i in c(1:10000) ) {
fl.cmr.sample = rnorm(length(na.omit(ave.48[fl.list,]$cmean.ratio)), mean=mean(ave.48[fl.list,]$cmean.ratio, na.rm=T), sd=sd(ave.48[fl.list,]$cmean.ratio, na.rm=T))
gd.cmr.sample = rnorm(length(na.omit(ave.48[gd.list,]$cmean.ratio)), mean=mean(ave.48[gd.list,]$cmean.ratio, na.rm=T), sd=sd(ave.48[gd.list,]$cmean.ratio, na.rm=T))
group = as.factor(c(rep(1, length(fl.cmr.sample)), rep(2, length(gd.cmr.sample))))
cmr.l.p.all[i] = leveneTest(c(fl.cmr.sample, gd.cmr.sample), group)$Pr[1]
}
mean(cmr.l.p.all)
summary(lm(ave.48$cmean.ratio~ave.48$log.bmr))
pwr.r.test(n=13, sig.level=0.05, power=0.8)
library(pwr)
pwr.r.test(n=13, sig.level=0.05, power=0.8)
abs(total.fl$fl1-total.fl$fl2)/((total.fl$fl1+total.fl$fl2)/2)
wilcox.test(abs(total.fl$fl1-total.fl$fl2)/((total.fl$fl1+total.fl$fl2)/2),
abs(total.gd$gd1-total.gd$gd2)/((total.gd$gd1+total.gd$gd2)/2)
)
rm(list=ls(all=TRUE))
library(phytools)
setwd("/Users/yanzhuji/R-scripts/R-chp3_clean/") # folder on Mac load("stats.RData") # for the convenience of rerunning data; will delete in scripts for uploading.
ave.tree=read.tree("TENT+outgroup_abb.ExaML.tre")# load("ave.rooted.RData") # the same...
fastMRCA(ave.tree, "Human", "Green_sea_turtle") # node 58 is the outgroup.
ave.rooted = root(ave.tree, node=58, resolve.root=TRUE)
plot(ave.rooted, cex=0.7) # double check
ave.48=read.csv("assembly-size-48.csv", sep=",", row.names=3) # spotted there is a typo in "opiHoa"
load("simple.gs.RData")
ave.48$simple.gs=simple.gs[row.names(ave.48),]$simple.gs/1e9
ave.48$log.sgs=log(ave.48$simple.gs) # "sgs": simple.gs
bm=read.csv("CRC-selected-species.csv", sep=",", row.names=4)
ave.48$bm=bm[row.names(ave.48),]$mean
ave.48$log.bm=log(ave.48$bm)
length(na.omit(ave.48$bm)) # 46; 2 species do not have body mass records
bmr=read.csv("metabolic_Makarieva-2008-PNAS.csv", header=TRUE, row.names=3) # added to RData 11/9/2015
ave.48$bmr=bmr[row.names(ave.48),]$qWkg
ave.48$log.bmr=log(ave.48$bmr)
load("lengths/cmean.ratio.RData") # cmean.ratio: consensus-scaled mean ratio (CR1 divided by consensus)
ave.48$cmean.ratio=cmean.ratio[row.names(ave.48)]
gd.list=c("strCam", "pygAde", "aptFor", "galGal", "melGal",
"tinGut", "carCri") #  "colVir", "cotJap", "pseHum"
fl.list=c("acaChl", "anaPla", "apaVit",           "balReg",
"bucRhi", "calAnn", "capCar",           "catAur",
"chaPel", "chaVoc", "chlMac", "colLiv", "colStr",
"corBra", "cucCan", "egrGar", "eurHel", "falPer",
"fulGla",           "gavSte", "geoFor", "halAlb",
"halLeu", "lepDis", "manVit",           "melUnd",
"merNub", "mesUni", "nesNot", "nipNip", "opiHoa",
"pelCri", "phaCar", "phaLep", "phoRub", "picPub",
"podCri", "pteGut",           "taeGut", "tauEry",
"tytAlb"
)
length(gd.list) # 7
length(fl.list) # 41
View(ave.48)
cor.test(ave.48$simple.gs, ave.48$agsd.gs, alternative = "g")
cor.test(ave.48$assembly.size, ave.48$agsd.gs, alternative = "g")
cor.test(ave.48$assembly.size, ave.48$simple.gs, alternative = "g")
bmr.bm.sp=row.names(ave.48[ (!is.na(ave.48$bmr)==TRUE) & (!is.na(ave.48$log.bm)==TRUE), ]) # 13 species
bmr.bm.pruned=drop.tip(ave.rooted, setdiff(ave.rooted$tip, bmr.bm.sp))
bmr.bm.df=ave.48[bmr.bm.pruned$tip,]
nrow(bmr.bm.df)
phylosig(bmr.bm.pruned, as.numeric(residuals(lm(bmr.bm.df$log.bmr~bmr.bm.df$log.bm))), test=T, method="lambda")
phylosig(bmr.bm.pruned, as.numeric(residuals(lm(bmr.bm.df$log.bmr~bmr.bm.df$log.bm))), test=T)
summary(lm(ave.48$log.bmr~ave.48$log.bm))
pwr.r.test(n=13, power=0.8, sig.level = 0.05)
pwr.r.test(n=13, power=0.8, sig.level = 0.05)
gs.cmr.sp=row.names(ave.48[ (!is.na(ave.48$simple.gs)==TRUE) & (!is.na(ave.48$cmean.ratio)==TRUE), ])
gs.cmr.pruned=drop.tip(ave.rooted, setdiff(ave.rooted$tip, gs.cmr.sp))
gs.cmr.df=ave.48[gs.cmr.pruned$tip,]
nrow(gs.cmr.df) # 46
phylosig(gs.cmr.pruned, as.numeric(residuals(lm(gs.cmr.df$log.sgs~gs.cmr.df$cmean.ratio))), test=T, method="lambda")
phylosig(gs.cmr.pruned, as.numeric(residuals(lm(gs.cmr.df$log.sgs~gs.cmr.df$cmean.ratio))), test=T)
summary(lm(ave.48$log.sgs~ave.48$cmean.ratio))
pwr.r.test(n=46, sig.level=0.05, power=0.8)
gs.bmr.sp=row.names(ave.48[ (!is.na(ave.48$simple.gs)==TRUE) & (!is.na(ave.48$bmr)==TRUE), ]) # 13 species
gs.bmr.pruned=drop.tip(ave.rooted, setdiff(ave.rooted$tip, gs.bmr.sp))
gs.bmr.df=ave.48[gs.bmr.pruned$tip,]
nrow(gs.bmr.df)
phylosig(gs.bmr.pruned, as.numeric(residuals(lm(gs.bmr.df$log.sgs~gs.bmr.df$log.bmr))), test=T, method="lambda")
phylosig(gs.bmr.pruned, as.numeric(residuals(lm(gs.bmr.df$log.sgs~gs.bmr.df$log.bmr))), test=T)
summary(lm(ave.48$log.sgs~ave.48$log.bmr))
pwr.r.test(n=13, sig.level=0.05, power=0.8)
cmr.bmr.sp=row.names(ave.48[ (!is.na(ave.48$cmean.ratio)==TRUE) & (!is.na(ave.48$bmr)==TRUE), ]) # 13 species
cmr.bmr.pruned=drop.tip(ave.rooted, setdiff(ave.rooted$tip, cmr.bmr.sp))
cmr.bmr.df=ave.48[cmr.bmr.pruned$tip,]
nrow(cmr.bmr.df)
phylosig(cmr.bmr.pruned, as.numeric(residuals(lm(cmr.bmr.df$cmean.ratio~cmr.bmr.df$log.bmr))), test=T, method="lambda")
phylosig(cmr.bmr.pruned, as.numeric(residuals(lm(cmr.bmr.df$cmean.ratio~cmr.bmr.df$log.bmr))), test=T)
summary(lm(ave.48$cmean.ratio~ave.48$log.bmr))
pwr.r.test(n=13, sig.level=0.05, power=0.8)
cmr.bm.sp=row.names(ave.48[ (!is.na(ave.48$cmean.ratio)==TRUE) & (!is.na(ave.48$log.bm)==TRUE), ]) # 45 species
cmr.bm.pruned=drop.tip(ave.rooted, setdiff(ave.rooted$tip, cmr.bm.sp))
cmr.bm.df=ave.48[cmr.bm.pruned$tip,]
nrow(cmr.bm.df)
phylosig(cmr.bm.pruned, as.numeric(residuals(lm(cmr.bm.df$cmean.ratio~cmr.bm.df$log.bm))), test=T, method="lambda")
phylosig(cmr.bm.pruned, as.numeric(residuals(lm(cmr.bm.df$cmean.ratio~cmr.bm.df$log.bm))), test=T)
summary(lm(ave.48$cmean.ratio~ave.48$log.bm))
wilcox.test(ave.48[fl.list,]$log.bm, ave.48[gd.list,]$log.bm, alternative="l")
bm.mw.p.all = vector(length=10000)
for ( i in c(1:10000) ) {
fl.bm.sample = rnorm(length(na.omit(ave.48[fl.list,]$log.bm)), mean=mean(ave.48[fl.list,]$log.bm, na.rm=T), sd=sd(ave.48[fl.list,]$log.bm, na.rm=T))
gd.bm.sample = rnorm(length(na.omit(ave.48[gd.list,]$log.bm)), mean=mean(ave.48[gd.list,]$log.bm, na.rm=T), sd=sd(ave.48[gd.list,]$log.bm, na.rm=T))
group = as.factor(c(rep(1, length(fl.bm.sample)), rep(2, length(gd.bm.sample))))
bm.mw.p.all[i] = wilcox.test(fl.bm.sample, gd.bm.sample, alternative="l")$p.value
}
mean(bm.mw.p.all<=0.05)
wilcox.test(ave.48[fl.list,]$log.sgs, ave.48[gd.list,]$log.sgs, alternative="l")
length(na.omit(ave.48[fl.list,]$log.sgs)) # 40
length(na.omit(ave.48[gd.list,]$log.sgs)) # 7
sgs.mw.p.all = vector(length=10000)
for ( i in c(1:10000) ) {
fl.sgs.sample = rnorm(length(na.omit(ave.48[fl.list,]$log.sgs)), mean=mean(ave.48[fl.list,]$log.sgs, na.rm=T), sd=sd(ave.48[fl.list,]$log.sgs, na.rm=T))
gd.sgs.sample = rnorm(length(na.omit(ave.48[gd.list,]$log.sgs)), mean=mean(ave.48[gd.list,]$log.sgs, na.rm=T), sd=sd(ave.48[gd.list,]$log.sgs, na.rm=T))
group = as.factor(c(rep(1, length(fl.sgs.sample)), rep(2, length(gd.sgs.sample))))
sgs.mw.p.all[i] = wilcox.test(fl.sgs.sample, gd.sgs.sample, alternative="l")$p.value
}
mean(sgs.mw.p.all<=0.05)
wilcox.test(ave.48[fl.list,]$cmean.ratio, ave.48[gd.list,]$cmean.ratio, alternative="l")
length(na.omit(ave.48[fl.list,]$cmean.ratio)) # 41
length(na.omit(ave.48[gd.list,]$cmean.ratio)) # 6
cmr.mw.p.all = vector(length=10000)
for ( i in c(1:10000) ) {
fl.cmr.sample = rnorm(length(na.omit(ave.48[fl.list,]$cmean.ratio)), mean=mean(ave.48[fl.list,]$cmean.ratio, na.rm=T), sd=sd(ave.48[fl.list,]$cmean.ratio, na.rm=T))
gd.cmr.sample = rnorm(length(na.omit(ave.48[gd.list,]$cmean.ratio)), mean=mean(ave.48[gd.list,]$cmean.ratio, na.rm=T), sd=sd(ave.48[gd.list,]$cmean.ratio, na.rm=T))
group = as.factor(c(rep(1, length(fl.cmr.sample)), rep(2, length(gd.cmr.sample))))
cmr.mw.p.all[i] = wilcox.test(fl.cmr.sample, gd.cmr.sample, alternative="l")$p.value
}
mean(cmr.mw.p.all<=0.05)
leveneTest(ave.48$cmean.ratio, as.factor(ave.48$dummy))
ave.48$dummy
ave.48[gd.list,"dummy"]=1
ave.48[fl.list,"dummy"]=0
leveneTest(ave.48$cmean.ratio, as.factor(ave.48$dummy))
leveneTest(ave.48$log.sgs, as.factor(ave.48$dummy))
sgs.l.p.all = vector(length=10000)
for ( i in c(1:10000) ) {
fl.sgs.sample = rnorm(length(na.omit(ave.48[fl.list,]$log.sgs)), mean=mean(ave.48[fl.list,]$log.sgs, na.rm=T), sd=sd(ave.48[fl.list,]$log.sgs, na.rm=T))
gd.sgs.sample = rnorm(length(na.omit(ave.48[gd.list,]$log.sgs)), mean=mean(ave.48[gd.list,]$log.sgs, na.rm=T), sd=sd(ave.48[gd.list,]$log.sgs, na.rm=T))
group = as.factor(c(rep(1, length(fl.sgs.sample)), rep(2, length(gd.sgs.sample))))
sgs.l.p.all[i] = leveneTest(c(fl.sgs.sample, gd.sgs.sample), group)$Pr[1]
}
mean(sgs.l.p.all)
cmr.l.p.all = vector(length=10000)
for ( i in c(1:10000) ) {
fl.cmr.sample = rnorm(length(na.omit(ave.48[fl.list,]$cmean.ratio)), mean=mean(ave.48[fl.list,]$cmean.ratio, na.rm=T), sd=sd(ave.48[fl.list,]$cmean.ratio, na.rm=T))
gd.cmr.sample = rnorm(length(na.omit(ave.48[gd.list,]$cmean.ratio)), mean=mean(ave.48[gd.list,]$cmean.ratio, na.rm=T), sd=sd(ave.48[gd.list,]$cmean.ratio, na.rm=T))
group = as.factor(c(rep(1, length(fl.cmr.sample)), rep(2, length(gd.cmr.sample))))
cmr.l.p.all[i] = leveneTest(c(fl.cmr.sample, gd.cmr.sample), group)$Pr[1]
}
mean(cmr.l.p.all)
setwd("lengths")
my.files = list.files(pattern="*_trimmed_length.txt")
total.gd=data.frame(#"sp1"=character(), "sp2"=character(),
"gd1"=numeric(), "gd2"=numeric(),
"gd1.gs"=numeric(), "gd2.gs"=numeric(), stringsAsFactors=FALSE)
pair=rbind(combn(gd.list,2))
for ( i in 1:ncol(pair)) {
gd1=pair[1,i]
gd2=pair[2,i]
pairwise=data.frame("gd1"=numeric(), "gd2"=numeric(), stringsAsFactors=FALSE) #
for (file in my.files){
locus.info=read.table(file, row.names=1)
if (!is.na(locus.info[gd1,]) & !is.na(locus.info[gd2,]) ){ #
pairwise[file,]=c(locus.info[gd1,], locus.info[gd2,] )
}
}
total.gd[paste(gd1, gd2, sep=","),]=c(#gd1, gd2,
sum( pairwise$gd1 ),
sum( pairwise$gd2 ),
ave.48[gd1,]$simple.gs,
ave.48[gd2,]$simple.gs)
# stats on correlation between genome size and combined lengths in this two species...PIC needed? perhaps not..
gd1.gs = ave.48[gd1,]$simple.gs
gd2.gs = ave.48[gd2,]$simple.gs
}
total.fl=data.frame(#"sp1"=character(), "sp2"=character(),
"fl1"=numeric(), "fl2"=numeric(),
"fl1.gs"=numeric(), "fl2.gs"=numeric(), stringsAsFactors=FALSE)
# or,
pair=rbind(combn(fl.list,2))
for ( i in 1:ncol(pair)) {
fl1=pair[1,i]
fl2=pair[2,i]
pairwise=data.frame("fl1"=numeric(), "fl2"=numeric(), stringsAsFactors=FALSE) #
for (file in my.files){
locus.info=read.table(file, row.names=1)
if (!is.na(locus.info[fl1,]) & !is.na(locus.info[fl2,]) ){ #
pairwise[file,]=c(locus.info[fl1,], locus.info[fl2,] )
}
}
# save combined lengths to total.fl
total.fl[paste(fl1, fl2, sep=","),]=c(#fl1, fl2,
sum( pairwise$fl1 ),
sum( pairwise$fl2 ),
ave.48[fl1,]$simple.gs,
ave.48[fl2,]$simple.gs)
# stats on correlation between genome size and combined lengths in this two species...PIC needed? perhaps not..
fl1.gs = ave.48[fl1,]$simple.gs
fl2.gs = ave.48[fl2,]$simple.gs
}
wilcox.test(abs(total.fl$fl1-total.fl$fl2)/((total.fl$fl1+total.fl$fl2)/2),
abs(total.gd$gd1-total.gd$gd2)/((total.gd$gd1+total.gd$gd2)/2))
wilcox.test(abs(total.fl$fl1-total.fl$fl2)/((total.fl$fl1+total.fl$fl2)/2),
abs(total.gd$gd1-total.gd$gd2)/((total.gd$gd1+total.gd$gd2)/2))
wilcox.test(abs(total.fl$fl1-total.fl$fl2)/((total.fl$fl1+total.fl$fl2)/2),
abs(total.gd$gd1-total.gd$gd2)/((total.gd$gd1+total.gd$gd2)/2),)
wilcox.test(abs(total.fl$fl1-total.fl$fl2)/((total.fl$fl1+total.fl$fl2)/2),
abs(total.gd$gd1-total.gd$gd2)/((total.gd$gd1+total.gd$gd2)/2),alternative="g")
plot(ave.48$log.bmr~ave.48$log.bm, xlab="log (body mass)", ylab="log (BMR)", cex.lab=1.5,
pch=21, bg="gold", cex=1.2)
points(ave.48[gd.list,]$log.bm, ave.48[gd.list,]$log.bmr, pch=19, cex=1.2, col="dodgerblue3")
abline(lm(ave.48$log.bmr~ave.48$log.bm), col="red", lwd=2)
text(ave.48$log.bm, ave.48$log.bmr, labels=row.names(ave.48))
plot(ave.48$log.sgs~ave.48$cmean.ratio, xlab="scaled length of CR1", ylab="log (genome size)", cex.lab=1.5,
pch=21, bg="gold", cex=1.2)
points(ave.48[gd.list,]$cmean.ratio, ave.48[gd.list,]$log.sgs, pch=19, cex=1.2, col="dodgerblue3" )
abline(lm(ave.48$log.sgs~ave.48$cmean.ratio), col="red", lwd=2)
abline(lm(ave.48[bmr.sp,]$log.sgs~ave.48[bmr.sp,]$cmean.ratio), col="blue", lwd=2)
abline(lm(ave.48[bmr.sp,]$log.sgs~ave.48[bmr.sp,]$cmean.ratio), col="blue", lwd=2)
plot(ave.48$log.sgs~ave.48$log.bmr, xlab="log (BMR)", ylab="log (genome size)", cex.lab=1.5,
pch=21, bg="gold", cex=1.2)
points(ave.48[gd.list,]$log.bmr, ave.48[gd.list,]$log.sgs, pch=19, cex=1.2, col="dodgerblue3"  )
abline(lm(ave.48$log.sgs~ave.48$log.bmr), col="red", lwd=2)
plot(ave.48$cmean.ratio~ave.48$log.bmr, xlab="log (BMR)", ylab="scaled length of CR1", cex.lab=1.5,
pch=21, bg="gold", cex=1.2)
points(ave.48[gd.list,]$log.bmr, ave.48[gd.list,]$cmean.ratio, pch=19, cex=1.2, col="dodgerblue3" )
abline(lm(ave.48$cmean.ratio~ave.48$log.bmr), col="red", lwd=2)
plot(ave.48$log.sgs~ave.48$log.bm, xlab="log (body mass)", ylab="log (genome size)", cex.lab=1.5,
pch=21, bg="gold", cex=1.2)
points(ave.48[gd.list,]$log.bm, ave.48[gd.list,]$log.sgs, pch=19, cex=1.2, col="dodgerblue3" )
abline(lm(ave.48$log.sgs~ave.48$log.bm), col="red", lwd=2)
plot(ave.48$cmean.ratio~ave.48$log.bm, xlab="log (body mass)", ylab="scaled length of CR1", cex.lab=1.5,
pch=21, bg="gold", cex=1.2)
points(ave.48[gd.list,]$log.bm, ave.48[gd.list,]$cmean.ratio, pch=19, cex=1.2, col="dodgerblue3" )
abline(lm(ave.48$cmean.ratio~ave.48$log.bm), col="red", lwd=2)
ave.48[gd.list,"dummy"]=1
ave.48[fl.list,"dummy"]=0
boxplot(ave.48$log.bmr~ave.48$dummy,
names=c("FY (n=10)", "GD (n=3)"), boxwex=0.4, ylab="log (BMR)", col=c("gold", "dodgerblue3"), cex.lab=1.2)
nrow(ave.48[!is.na(ave.48$bmr)==TRUE,])
row.names(ave.48[!is.na(ave.48$bmr)==TRUE,][gd.list,])
boxplot(ave.48$log.bm~ave.48$dummy,
names=c("FY (n=39)", "GD (n=7)"), boxwex=0.4, ylab="log (body mass)", col=c("gold", "dodgerblue3"), cex.lab=1.2)
nrow(ave.48[!is.na(ave.48$bm)==TRUE,]) # total = 46
row.names(ave.48[!is.na(ave.48$bm)==TRUE,][gd.list,])  # no.gd = 7
boxplot(ave.48$log.sgs~ave.48$dummy,
names=c("FY (n=40)", "GD (n=7)"), boxwex=0.4, ylab="log (genome size)", col=c("gold", "dodgerblue3"), cex.lab=1.2)
nrow(ave.48[!is.na(ave.48$log.sgs)==TRUE,]) # total = 47
row.names(ave.48[!is.na(ave.48$log.sgs)==TRUE,][gd.list,]) # no.gd = 7
boxplot(ave.48$cmean.ratio~ave.48$dummy,
names=c("FY (n=41)", "GD (n=6)"), boxwex=0.4, ylab="scaled length of CR1", col=c("gold", "dodgerblue3"), cex.lab=1.2)
nrow(ave.48[!is.na(ave.48$cmean.ratio)==TRUE,]) # total = 47
row.names(ave.48[!is.na(ave.48$cmean.ratio)==TRUE,][gd.list,])  # no.gd = 6
boxplot(abs(total.fl$fl1-total.fl$fl2)/((total.fl$fl1+total.fl$fl2)/2),
abs(total.gd$gd1-total.gd$gd2)/((total.gd$gd1+total.gd$gd2)/2),
names=c("FY","GD"), boxwex=0.4,
ylab="pairwise difference of CR1",
col=c("gold", "dodgerblue3"))
library(phytools)
setwd("/Users/yanzhuji/R-scripts/R-chp3/kmer-c-value/")
species.list=c("acaChl", "anaPla", "apaVit", "aptFor", "balReg",
"bucRhi", "calAnn", "capCar", "carCri", "catAur",
"chaPel", "chaVoc", "chlMac", "colLiv", "colStr",
"corBra", "cucCan", "egrGar", "eurHel", "falPer",
"fulGla", "galGal", "gavSte", "geoFor", "halAlb",
"halLeu", "lepDis", "manVit", "melGal", "melUnd",
"merNub", "mesUni", "nesNot", "nipNip", "opiHoa",
"pelCri", "phaCar", "phaLep", "phoRub", "picPub",
"podCri", "pteGut", "pygAde", "strCam", "tauEry",
"tinGut", "tytAlb"
)
View(simple.gs)
setwd("/Users/yanzhuji/R-scripts/R-chp3/lengths/")
length.matrix=data.frame(row.names=row.names(ave.48))
my.files = list.files(pattern="*_trimmed_length.txt")
for (file in my.files){
# file="KL217251.1_864634_866046_trimmed_length.txt"
locus.info=read.table(file, row.names=1)
length.matrix[,file]=locus.info[row.names(length.matrix),]
}
consensus.length = read.table("consensus-length.txt", row.names=1)
cratio.matrix=matrix(nrow=48, ncol=50)
for ( n in 1:ncol(length.matrix)){
cratio.matrix[,n] = length.matrix[,n]/consensus.length[colnames(length.matrix)[n],"V2"]
}
cmean.ratio=vector()
for ( m in 1:nrow(length.matrix)){
cmean.ratio[m] = mean(cratio.matrix[m,], na.rm=T)
}
names(cmean.ratio)=row.names(length.matrix)
save(cmean.ratio, file="cmean.ratio.RData")
View(cmean.ratio)
load("lengths/cmean.ratio.RData") # cmean.ratio: consensus-scaled mean ratio (CR1 divided by consensus)
getwd()
names(cmean.ratio)=row.names(length.matrix)
save(cmean.ratio, file="../cmean.ratio.RData")
load("cmean.ratio.RData") # cmean.ratio: consensus-scaled mean ratio (CR1 divided by consensus)
ave.48$cmean.ratio=cmean.ratio[row.names(ave.48)]
View(ave.48$cmean.ratio)
View(ave.48$dummy)
View(ave.48)
names(cmean.ratio)
head(cmean.ratio)
setwd("/Users/yanzhuji/R-scripts/R-chp3/kmer-c-value/")
species.list=c("acaChl", "anaPla", "apaVit", "aptFor", "balReg",
"bucRhi", "calAnn", "capCar", "carCri", "catAur",
"chaPel", "chaVoc", "chlMac", "colLiv", "colStr",
"corBra", "cucCan", "egrGar", "eurHel", "falPer",
"fulGla", "galGal", "gavSte", "geoFor", "halAlb",
"halLeu", "lepDis", "manVit", "melGal", "melUnd",
"merNub", "mesUni", "nesNot", "nipNip", "opiHoa",
"pelCri", "phaCar", "phaLep", "phoRub", "picPub",
"podCri", "pteGut", "pygAde", "strCam", "tauEry",
"tinGut", "tytAlb"
)
length(species.list) # 47, taeGut is excluded because insufficient amount of short reads
ksa.coverage=read.table("ksa-coverage_47-species.list", row.names = 1)
colnames(ksa.coverage) = "ksa.coverage"
ksa.coverage=read.table("ksa-coverage_47-species.list", row.names = 1)
colnames(ksa.coverage) = "ksa.coverage"
ksa.gs = data.frame( error=numeric(0), genomesize=numeric(0) )
for (i in species.list){
infile = paste("histo/", i, "_m31_U5.histo", sep="")
#  print (infile)
i.histo = read.table(file=infile) # , row.names = 1
colnames(i.histo) = c("cov", "freq")
#  plot (i.histo[5:100,])
i.ksapeak = ksa.coverage[i,]
i.error = i.histo[i.histo$freq == min(i.histo[i.histo$cov <= 0.35 * i.ksapeak, ]$freq), ]$cov
i.genomesize = sum(as.numeric(i.histo[i.error:nrow(i.histo), 1] * i.histo[i.error : nrow(i.histo), 2]))/i.ksapeak
i.estimates = data.frame(i.genomesize, i.error, row.names=i)
ksa.gs = rbind(ksa.gs, i.estimates)
}
ksa.gs$cov = ksa.coverage[row.names(ksa.gs),]
colnames(ksa.gs)=c("ksa.gs", "error.cov", "ksa.cov")
simple.gs = data.frame( error=numeric(0), simple.gs=numeric(0), simple.cov=numeric(0) )
for (i in species.list){
infile = paste("histo/", i, "_m31_U5.histo", sep="")
#  infile = ("histo/tinGut_m31_U5.histo") #test
#  print (infile)
i.histo = read.table(file=infile) # , row.names = 1
colnames(i.histo) = c("cov", "freq")
#  plot (i.histo[5:100,])
ksa.cov = ksa.coverage[i,]
i.mainpeak = i.histo[i.histo$freq == max(i.histo[i.histo$cov > 0.5 * ksa.cov , ]$freq), ]$cov # used ksa coverage to help delimit the location of the mainpeak
i.error = i.histo[i.histo$freq == min(i.histo[i.histo$cov <= 0.35 * ksa.cov, ]$freq), ]$cov
i.genomesize = sum(as.numeric(i.histo[i.error:nrow(i.histo), 1] * i.histo[i.error : nrow(i.histo), 2]))/i.mainpeak
i.estimates = data.frame(i.genomesize, i.error, i.mainpeak, row.names=i)
simple.gs = rbind(simple.gs, i.estimates)
}
colnames(simple.gs) = c("simple.gs", "error.cov", "simple.cov")
### plot the k-mer spectrum to check if every min and max has been correctly identified
pdf(file='k-mer_spectrum.pdf', width=8, height=40)
par(mfrow=c(18, 3),mar=c(2,2,2,2))
for (i in species.list){
#test i = "tinGut"
infile = paste("histo/", i, "_m31_U5.histo", sep="")
#  print (infile)
i.histo = read.table(file=infile) # , row.names = 1
if ( i == "catAur"){ # except for "catAur", all other plots have lowest x-axis value of (error_peak - 2) but catAur has (error_peak - 1) to avoid flatterned k-mer spectrum..
plot (i.histo[(simple.gs[i, "error.cov"]-1):150,], main=i, xlab="k-mer frequency", ylab="number of k-mers",
pch=20, cex=0.8, xaxp=c(0, 150, 3), xlim=c(0, 150))
i="catAur"
simple.gs["catAur",2]=4 # used to be 3
infile = paste("histo/", i, "_m31_U5.histo", sep="")
i.histo = read.table(file=infile)
simple.gs["catAur", "simple.gs"] =
sum(as.numeric(i.histo[4:nrow(i.histo), 1]* i.histo[4 : nrow(i.histo), 2]))/9
i="tinGut"
simple.gs["tinGut",3]=71 # used to be 38
infile = paste("histo/", i, "_m31_U5.histo", sep="")
i.histo = read.table(file=infile)
simple.gs["tinGut", "simple.gs"]=
sum(as.numeric(i.histo[15:nrow(i.histo), 1]* i.histo[15 : nrow(i.histo), 2]))/71
i="colLiv"
simple.gs["colLiv", "error.cov"]=34
infile = paste("histo/", i, "_m31_U5.histo", sep="")
i.histo = read.table(file=infile)
simple.gs["colLiv", "simple.gs"]=
sum(as.numeric(i.histo[34:nrow(i.histo), 1] * i.histo[34 : nrow(i.histo), 2]))/71
save(simple.gs, file="../simple.gs.RData")
View(simple.gs)
save.image("stats.RData")
